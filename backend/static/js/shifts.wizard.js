// Phase 2 split: Create Shift wizard & inline calendar
const overlay = document.getElementById('wizardOverlay');
const wiz = { step:1, employeeId:null, start:null, end:null, repeat:false, days:new Set(), until:null };

function showStep(n){ wiz.step=n; for(let i=1;i<=3;i++) document.getElementById('step'+i).classList.toggle('hidden', i!==n); document.getElementById('wizBack').classList.toggle('hidden', n===1); document.getElementById('wizNext').textContent=(n===3?'Create':'Next'); if(n===3) buildReview(); }

function openWizard(){
  const list=document.getElementById('wizEmployeeList');
  if(list){ list.innerHTML=''; employeesData.forEach(e=>{ const b=document.createElement('button'); b.type='button'; b.className='chip emp-btn'; b.textContent=e.name; b.dataset.id=e.id; b.setAttribute('aria-pressed','false'); b.addEventListener('click',()=>{ list.querySelectorAll('.emp-btn').forEach(x=>{ x.classList.remove('active'); x.setAttribute('aria-pressed','false'); }); b.classList.add('active'); b.setAttribute('aria-pressed','true'); wiz.employeeId=String(e.id); }); list.appendChild(b); }); }
  const daysCtn=document.getElementById('wizDays'); if(daysCtn && !daysCtn.dataset.built){ const labels=['Mon','Tue','Wed','Thu','Fri','Sat','Sun']; labels.forEach((lb,idx)=>{ const btn=document.createElement('button'); btn.type='button'; btn.className='chip day-chip'; btn.textContent=lb; btn.dataset.value=idx; btn.setAttribute('aria-pressed','false'); btn.addEventListener('click',()=>{ const isPressed=btn.getAttribute('aria-pressed')==='true'; btn.setAttribute('aria-pressed', !isPressed ? 'true':'false'); btn.classList.toggle('active', !isPressed); if(!isPressed) wiz.days.add(idx); else wiz.days.delete(idx); }); daysCtn.appendChild(btn); }); daysCtn.dataset.built='1'; }
  overlay.style.display='flex'; setTimeout(()=>{ try{ const firstBtn=list && list.querySelector('.emp-btn'); if(firstBtn) firstBtn.focus(); }catch{} },0); initInlineCalendar(); showStep(1);
}
function closeWizard(){ overlay.style.display='none'; }
function openWizardWithDate(day){ openWizard(); const dStr=`${day.getFullYear()}-${pad2(day.getMonth()+1)}-${pad2(day.getDate())}`; const dInput=document.getElementById('wizStartDate'); if(dInput) dInput.value=dStr; updateStartFromControls && updateStartFromControls(); }

function buildReview(){ const emp=employeesData.find(e=>String(e.id)===String(wiz.employeeId)); const startStr=wiz.start? new Date(wiz.start).toLocaleString():'Not set'; const endStr=wiz.end||'None'; let rec='No'; if(wiz.repeat){ const days=[...wiz.days].sort().map(d=>['Mon','Tue','Wed','Thu','Fri','Sat','Sun'][d]).join(', '); rec=`Yes • ${days||'Base day'}${wiz.until? ' • until '+wiz.until:''}`; } document.getElementById('wizReview').textContent=`${emp?emp.name:'(none)'} • ${startStr} • End ${endStr} • Repeat ${rec}`; }

function to24h(h12, ampm){ let h=parseInt(h12||'0',10); if(isNaN(h)) return ''; if(ampm==='AM'){ if(h===12) h=0; } else { if(h!==12) h+=12; } return pad2(h); }
function getSelectedAmPm(prefix){ const amBtn=document.getElementById(prefix+'AM'); const pmBtn=document.getElementById(prefix+'PM'); return amBtn && amBtn.classList.contains('active')? 'AM':'PM'; }
function updateStartFromControls(){ const d=document.getElementById('wizStartDate').value; const hh12=document.getElementById('wizStartHour12').value; const mm=document.getElementById('wizStartMin').value; const ap=getSelectedAmPm('wizStart'); const hh=to24h(hh12, ap); wiz.start=(d && hh && mm)? `${d}T${hh}:${mm}`:null; }
function updateEndFromControls(){ const hh12=document.getElementById('wizEndHour12').value; const mm=document.getElementById('wizEndMin').value; const ap=getSelectedAmPm('wizEnd'); const hh=to24h(hh12, ap); wiz.end=(hh && mm)? `${hh}:${mm}`:null; }

// Inline calendar widget
const calState={ currentMonth:new Date(), selectedDate:null };
function renderInlineCalendar(){ const monthEl=document.getElementById('wizCalMonth'); const daysEl=document.getElementById('wizCalDays'); if(!monthEl||!daysEl) return; const now=new Date(); const month=calState.currentMonth.getMonth(); const year=calState.currentMonth.getFullYear(); monthEl.textContent=new Date(year,month).toLocaleDateString(undefined,{month:'long',year:'numeric'}); daysEl.innerHTML=''; const firstDay=new Date(year,month,1); const startDate=new Date(firstDay); startDate.setDate(startDate.getDate()-firstDay.getDay()); for(let i=0;i<42;i++){ const date=new Date(startDate); date.setDate(startDate.getDate()+i); const dayEl=document.createElement('button'); dayEl.type='button'; dayEl.className='cal-day'; dayEl.textContent=date.getDate(); dayEl.setAttribute('tabindex','-1'); const isCurrentMonth=date.getMonth()===month; const isToday=date.toDateString()===now.toDateString(); const isSelected=calState.selectedDate && date.toDateString()===calState.selectedDate.toDateString(); if(!isCurrentMonth) dayEl.classList.add('other-month'); if(isToday) dayEl.classList.add('today'); if(isSelected) dayEl.classList.add('selected'); dayEl.setAttribute('aria-label', date.toLocaleDateString()); dayEl.addEventListener('click',()=>selectCalendarDate(date)); daysEl.appendChild(dayEl); } }
function selectCalendarDate(date){ calState.selectedDate=new Date(date); const dateInput=document.getElementById('wizStartDate'); if(dateInput) dateInput.value=`${date.getFullYear()}-${pad2(date.getMonth()+1)}-${pad2(date.getDate())}`; renderInlineCalendar(); if(typeof updateStartFromControls==='function') updateStartFromControls(); }
function initInlineCalendar(){ const prevBtn=document.getElementById('wizCalPrev'); const nextBtn=document.getElementById('wizCalNext'); const dateInput=document.getElementById('wizStartDate'); if(prevBtn){ prevBtn.addEventListener('click',()=>{ calState.currentMonth.setMonth(calState.currentMonth.getMonth()-1); renderInlineCalendar(); }); } if(nextBtn){ nextBtn.addEventListener('click',()=>{ calState.currentMonth.setMonth(calState.currentMonth.getMonth()+1); renderInlineCalendar(); }); } if(dateInput){ dateInput.addEventListener('change',(e)=>{ if(e.target.value){ const date=new Date(e.target.value+'T00:00:00'); calState.selectedDate=date; calState.currentMonth=new Date(date.getFullYear(), date.getMonth(),1); renderInlineCalendar(); } }); } const daysContainer=document.getElementById('wizCalDays'); if(daysContainer){ daysContainer.addEventListener('keydown',(e)=>{ const currentFocus=document.activeElement; if(!currentFocus.classList.contains('cal-day')) return; const days=Array.from(daysContainer.querySelectorAll('.cal-day')); const currentIndex=days.indexOf(currentFocus); let nextIndex=currentIndex; switch(e.key){ case 'ArrowLeft': e.preventDefault(); nextIndex=Math.max(0,currentIndex-1); break; case 'ArrowRight': e.preventDefault(); nextIndex=Math.min(days.length-1,currentIndex+1); break; case 'ArrowUp': e.preventDefault(); nextIndex=Math.max(0,currentIndex-7); break; case 'ArrowDown': e.preventDefault(); nextIndex=Math.min(days.length-1,currentIndex+7); break; case 'Enter': case ' ': e.preventDefault(); currentFocus.click(); return; case 'PageUp': e.preventDefault(); calState.currentMonth.setMonth(calState.currentMonth.getMonth()-1); renderInlineCalendar(); return; case 'PageDown': e.preventDefault(); calState.currentMonth.setMonth(calState.currentMonth.getMonth()+1); renderInlineCalendar(); return; } if(nextIndex!==currentIndex){ days[nextIndex].focus(); days[nextIndex].setAttribute('tabindex','0'); currentFocus.setAttribute('tabindex','-1'); } }); } const today=new Date(); calState.selectedDate=today; calState.currentMonth=new Date(today.getFullYear(), today.getMonth(),1); if(dateInput) dateInput.value=`${today.getFullYear()}-${pad2(today.getMonth()+1)}-${pad2(today.getDate())}`; renderInlineCalendar(); }

// Buttons & events
document.getElementById('btnNewShift').addEventListener('click', openWizard);
document.getElementById('wizCancel').addEventListener('click', closeWizard);
document.getElementById('wizBack').addEventListener('click', ()=> showStep(Math.max(1, wiz.step-1)) );
document.getElementById('wizNext').addEventListener('click', ()=>{ if(wiz.step===1){ if(!wiz.employeeId) return alert('Select an employee'); showStep(2); return;} if(wiz.step===2){ updateStartFromControls(); updateEndFromControls(); if(!wiz.start) return alert('Pick a start date & time'); if(wiz.end){ const st=new Date(wiz.start); const [eh,em]=wiz.end.split(':'); const et=new Date(wiz.start); et.setHours(parseInt(eh,10), parseInt(em,10),0,0); if(et<=st) return alert('End time must be after start'); } showStep(3); return;} if(wiz.step===3){ const form=document.getElementById('addShiftForm'); document.getElementById('employee_id_select').value=wiz.employeeId; document.getElementById('shift_time_input').value=wiz.start; document.getElementById('end_time_input').value=wiz.end||''; document.getElementById('repeat_until_input').value=wiz.until||''; [...form.querySelectorAll('input[name="selected_days"]'), ...form.querySelectorAll('input[name="repeat_weekly"]')].forEach(n=>n.remove()); if(wiz.repeat){ const rw=document.createElement('input'); rw.type='hidden'; rw.name='repeat_weekly'; rw.value='on'; form.appendChild(rw); wiz.days.forEach(d=>{ const hid=document.createElement('input'); hid.type='hidden'; hid.name='selected_days'; hid.value=String(d); form.appendChild(hid); }); } form.requestSubmit(); closeWizard(); } });

['wizStartDate','wizStartHour12','wizStartMin'].forEach(id=>{ const el=document.getElementById(id); if(el) el.addEventListener('change', updateStartFromControls); });
['wizEndHour12','wizEndMin'].forEach(id=>{ const el=document.getElementById(id); if(el) el.addEventListener('change', updateEndFromControls); });

function setupAmPmButtons(prefix, updateFn){ const amBtn=document.getElementById(prefix+'AM'); const pmBtn=document.getElementById(prefix+'PM'); if(amBtn && pmBtn){ [amBtn, pmBtn].forEach(btn=>{ btn.addEventListener('click',()=>{ amBtn.classList.toggle('active', btn===amBtn); pmBtn.classList.toggle('active', btn===pmBtn); amBtn.setAttribute('aria-pressed', btn===amBtn?'true':'false'); pmBtn.setAttribute('aria-pressed', btn===pmBtn?'true':'false'); updateFn(); }); btn.addEventListener('keydown',(e)=>{ if(e.key==='ArrowLeft' || e.key==='ArrowRight'){ e.preventDefault(); (btn===amBtn? pmBtn:amBtn).click(); (btn===amBtn? pmBtn:amBtn).focus(); } else if(e.key===' '||e.key==='Enter'){ e.preventDefault(); btn.click(); } }); }); } }
setupAmPmButtons('wizStart', updateStartFromControls); setupAmPmButtons('wizEnd', updateEndFromControls);

// Repeat toggle
document.getElementById('wizRepeatToggle').addEventListener('click', (e)=>{ const isPressed=e.target.getAttribute('aria-pressed')==='true'; const newPressed=!isPressed; e.target.setAttribute('aria-pressed', newPressed?'true':'false'); wiz.repeat=newPressed; document.getElementById('wizDaysCtn').classList.toggle('hidden', !newPressed); document.getElementById('wizUntilCtn').classList.toggle('hidden', !newPressed); });
document.getElementById('wizUntil').addEventListener('change',(e)=>{ wiz.until=e.target.value||null; });

function prefillWizardDefaults(){ const hSel=document.getElementById('wizStartHour'); const mSel=document.getElementById('wizStartMin'); if(hSel && !hSel.value) hSel.value='09'; if(mSel && !mSel.value) mSel.value='00'; wiz.repeat=false; wiz.days.clear(); const toggle=document.getElementById('wizRepeatToggle'); if(toggle) toggle.setAttribute('aria-pressed','false'); const daysCtn=document.getElementById('wizDaysCtn'); const untilCtn=document.getElementById('wizUntilCtn'); if(daysCtn) daysCtn.classList.add('hidden'); if(untilCtn) untilCtn.classList.add('hidden'); }
const _openWizardRef=openWizard; openWizard=function(){ _openWizardRef(); prefillWizardDefaults(); if(typeof updateStartFromControls==='function') updateStartFromControls(); const daysCtn=document.getElementById('wizDaysCtn'); const untilCtn=document.getElementById('wizUntilCtn'); if(daysCtn && wiz.repeat===false && !daysCtn.classList.contains('hidden')) daysCtn.classList.add('hidden'); if(untilCtn && wiz.repeat===false && !untilCtn.classList.contains('hidden')) untilCtn.classList.add('hidden'); };

// Escape handler integration (menu/edit rely on overlay existing)
document.addEventListener('keydown',(e)=>{ if(e.key==='Escape'){ if(typeof menu!=='undefined' && menu && menu.style.display==='block') closeMenu(); else if(overlay && overlay.style.display==='flex') closeWizard(); else if(typeof eOverlay!=='undefined' && eOverlay && !eOverlay.classList.contains('is-hidden')) eClose(); } });

// End wizard module
